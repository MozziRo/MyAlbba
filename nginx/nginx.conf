# Nginx 설정
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip 압축 활성화 (프론트엔드 최적화)
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_vary on;

    # HTTP to HTTPS 리디렉트
    server {
        listen 80;
        server_name i12a304.p.ssafy.io;
        return 301 https://$host$request_uri;
    }

    # HTTPS 서버
    server {
        listen 443 ssl;
        server_name i12a304.p.ssafy.io;

        # SSL 설정
        ssl_certificate /etc/letsencrypt/live/i12a304.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/i12a304.p.ssafy.io/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # 정적 파일 제공 (Vue)
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri /index.html;
        }

	      location = /login {
         	   proxy_pass http://pjt-backend:8080/login;
           	   proxy_http_version 1.1;
               proxy_set_header Host $host;
               proxy_set_header X-Real-IP $remote_addr;
               proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
               proxy_set_header X-Forwarded-Proto $scheme;
       	 }

        # API 백엔드 프록시
        location /api/ {
            proxy_pass http://pjt-backend:8080/api/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

	    if ($request_method = 'OPTIONS') {
       		 add_header Access-Control-Allow-Origin *;
       		 add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
       		 add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
       		 return 204;
   	     }

   	     add_header Access-Control-Allow-Origin *;
             add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
             add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
         }

        # 환경 변수 설정 (Vue 환경 변수 파일 제공)
        location /env-config.js {
            root /usr/share/nginx/html;
      	    default_type "application/javascript";
      	    expires -1;
      	    add_header Cache-Control "no-cache, no-store, must-revalidate";
      	    add_header Pragma "no-cache";
      	    add_header Expires 0;
               
        }

        # WebSocket 프록시
        location /ws/ {
            proxy_pass http://pjt-backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
	   
        }
        
        location /analyze_sentiment {
            rewrite ^/analyze_sentiment/?$ /api/memo/analyze_sentiment break;
            proxy_pass http://pjt-backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        
        location /extract_keywords {
            rewrite ^/extract_keywords/?$ /api/memo/extract_keywords break;
            proxy_pass http://pjt-backend:8080;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
        
        location /crawl_and_save/ {
            proxy_pass http://pjt-fastapi:8000/crawl_and_save/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        
            
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
                add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
                return 204;
            }
        
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS';
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type';
        }


	
    }
}

